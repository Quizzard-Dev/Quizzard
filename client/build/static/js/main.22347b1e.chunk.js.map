{"version":3,"sources":["utils/auth.js","utils/mutations.js","components/LogInForm/index.js","components/SignUpForm/index.js","components/Dropdown/index.js","components/MainNavbar/index.js","pages/Splash/index.js","utils/queries.js","components/QuizList/index.js","pages/Dashboard/index.js","pages/QuizCreator/index.js","App.js","reportWebVitals.js","index.js"],"names":["localStorage","getItem","token","decode","exp","Date","now","removeItem","this","getToken","isTokenExpired","idToken","setItem","window","location","assign","LOGIN_USER","gql","CREATE_USER","CREATE_QUIZ","DELETE_QUIZ","LogInForm","useState","email","password","userFormData","setUserFormData","useMutation","loginUser","handleFormSubmit","event","a","preventDefault","variables","data","Error","Auth","login","console","error","className","onSubmit","e","value","onChange","target","type","placeholder","SignUpForm","username","createUser","addUser","Dropdown","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","onclick","document","querySelector","ref","onClick","createPopper","current","placement","getProfile","icon","faChevronDown","style","minWidth","href","logout","customStyles","content","top","left","right","bottom","marginRight","transform","display","textAlign","MainNavbar","isOpen","setIsOpen","checked","setChecked","closeModal","handleRadioChange","log","as","Link","loggedIn","onRequestClose","shouldReturnFocusAfterClose","shouldCloseOnOverlayClick","contentLabel","faTimes","size","id","name","Splash","Modal","setAppElement","getElementById","GET_ME","QuizList","deleteQuiz","useQuery","loading","quizData","me","quizzes","quiz","stopPropagation","quizId","_id","reload","length","map","JSON","stringify","handleQuizEdit","title","handleQuizDelete","Dashboard","QuizCreator","createQuiz","baseQuiz","questions","baseQuestion","questionText","answers","index","baseAnswer","answerText","isCorrect","loadedQuiz","parse","__typename","question","answer","setQuiz","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","updateQuestion","newQuestionList","updateAnswer","newAnswerList","input","handleQuestionChange","delIndex","indexOf","splice","forEach","handleQuestionDelete","push","addQuestion","handleAnswerChange","correctAnswer","handleCorrectChange","handleAnswerDelete","newAnswer","addAnswer","handleQuizCreate","httpLink","createHttpLink","uri","errorLink","onError","graphQLErrors","networkError","link","ApolloLink","from","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22347b1e.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getToken() {\n    return localStorage.getItem('id_token');\n  };\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  };\n\n  getProfile()  {\n    return decode(this.getToken());\n  };\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  };\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/home');\n  };\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  };\n};\n\nexport default new AuthService();\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n        user {\n          _id\n          username\n        }\n        token\n  }\n}\n`\n\nexport const CREATE_USER = gql`\n    mutation createUser($email: String!, $username: String!, $password: String!) {\n     addUser(email: $email, username: $username, password: $password) {\n         user {\n              _id\n              username\n             }\n         token\n  }\n}\n`\n\nexport const CREATE_QUIZ = gql `\n    mutation createQuiz($input: QuizInput!) {\n  createQuiz(input: $input) {\n    title\n    _id\n    createdAt\n    author\n    questions {\n      questionText\n      answers {\n        answerText\n        isCorrect\n      }\n    }\n  }\n}\n`\n\nexport const DELETE_QUIZ = gql`\n  mutation deleteQuiz($quizId: ID!) {\n    deleteQuiz(quizId: $quizId) {\n      title\n      _id\n      author\n    }\n  }\n`","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport Auth from '../../utils/auth';\nimport { LOGIN_USER } from '../../utils/mutations';\n\nexport default function LogInForm() {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: {...userFormData}\n      });\n      if (!data) {\n        throw new Error('Something went wrong!');\n      }\n      Auth.login(data.login.token)\n    } catch(err) {\n      console.error(err);\n    }\n  \n    setUserFormData({\n      email: '',\n      password: ''\n    });\n  };\n  \n  return (\n    <div>\n      <form className='p-3' onSubmit={(e) => handleFormSubmit(e)}>\n        <input value={userFormData.email} onChange={(e) => setUserFormData({...userFormData, email: e.target.value})} type='email' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='john@website.com' />\n        <input value={userFormData.password} onChange={(e) => setUserFormData({...userFormData, password: e.target.value})} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='password' />\n        <button \n          type='submit' className='w-full px-4 py-3 bg-blue-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform'\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  )\n};\n","import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\n\nimport Auth from '../../utils/auth';\nimport { CREATE_USER } from '../../utils/mutations';\n\nexport default function SignUpForm() {\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: ''});\n  const [createUser] = useMutation(CREATE_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createUser({\n        variables: {...userFormData}\n      });\n\n      if (!data) {\n        throw new Error('something went wrong!');\n      }\n      Auth.login(data.addUser.token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n\n  return (\n    <div>\n      <form className='p-3' onSubmit={(e) => handleFormSubmit(e)}>\n      <input value={userFormData.username} onChange={(e) => setUserFormData({...userFormData, username: e.target.value})} type='text' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='username' />\n        <input value={userFormData.email} onChange={(e) => setUserFormData({...userFormData, email: e.target.value})} type='email' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='john@website.com' />\n        <input value={userFormData.password} onChange={(e) => setUserFormData({...userFormData, password: e.target.value})} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='password' />\n        {/* <input onChange={handleInputChange} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='confirm password' /> */}\n        <button \n          type='submit' className='w-full px-4 py-3 bg-blue-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform'>\n          Submit\n        </button>\n      </form>\n    </div>\n  )\n};\n","import React, { useState, createRef } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Auth from '../../utils/auth';\n\nexport default function Dropdown() {\n  const [dropdownPopoverShow, setDropdownPopoverShow] = useState(false);\n  const btnDropdownRef = createRef();\n  const popoverDropdownRef = createRef();\n\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"bottom-start\"\n    });\n    setDropdownPopoverShow(true);\n  };\n\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n\n  window.onclick = function(event) {\n    event.preventDefault();\n    if (event.target !== document.querySelector('.dropdownbtn')) {\n      setDropdownPopoverShow(false);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"flex flex-wrap px-4\">\n      <div className=\"relative inline-flex align-middle w-full\">\n            <button\n              className={\n                \"text-white font-bold text-sm px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 dropdownbtn bg-theme-darker\"\n              }\n              type=\"button\"\n              ref={btnDropdownRef}\n              onClick={() => {\n                dropdownPopoverShow\n                  ? closeDropdownPopover()\n                  : openDropdownPopover();\n              }}\n            >\n              {Auth.getProfile().data.username} <FontAwesomeIcon icon={faChevronDown} />\n            </button>\n            <div\n              ref={popoverDropdownRef}\n              className={\n                (dropdownPopoverShow ? \"block \" : \"hidden \") +\n                \"bg-theme-darker text-base z-50 py-1 list-none text-center rounded shadow-lg mt-1\"\n              }\n              style={{ minWidth: \"12rem\" }}\n            >\n              <a\n                href=\"/home\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                }\n                onClick={() => window.location.assign(\"/home\")}\n              >\n                Home\n              </a>\n              <a\n                href=\"/creator\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                }\n                onClick={() => window.location.assign(\"/creator\")}\n              >\n                Creator\n              </a>\n              <a\n                href=\"/home\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                }\n                onClick={e => e.preventDefault()}\n              >\n                Something else here\n              </a>\n              <div className=\"h-0 my-2 border border-solid border-t-0 border-blueGray-800 opacity-25\" />\n              <a\n                href=\"/home\"\n                className={\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\n                }\n              >\n                <button className='px-4 py-3 bg-red-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform' onClick={Auth.logout}>Logout</button>\n              </a>\n            </div>\n          </div>\n      </div>\n    </>\n  );\n};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\nimport LogInForm from '../LogInForm';\nimport SignUpForm from '../SignUpForm';\nimport Dropdown from '../Dropdown';\nimport Auth from '../../utils/auth';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'inline',\n    textAlign: 'right'\n  }\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nexport default function MainNavbar() {\n  let navClasses = 'mx-auto flex items-center justify-between bg-theme-main p-6';\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [checked, setChecked] = useState('login-radio');\n\n  function openModal() {\n    setIsOpen(true);\n  };\n  \n  function closeModal() {\n    setIsOpen(false);\n  };\n\n  function handleRadioChange(event) {\n    console.log(event.target);\n  }\n\n  return (\n    <div className={navClasses}>\n      <div>\n        <a className='tracking-widest' as={Link} href='/'>\n          Quizzard\n        </a>\n      </div>\n      <div className='flex'>\n        {Auth.loggedIn() ? (\n          <>\n            <Dropdown/>\n          </>\n        ) : (\n          <>\n          <button className='openModal text-center' onClick={openModal}>Log In | Sign Up</button>\n          </>\n        )}\n      </div>\n      <Modal \n        isOpen={isOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        shouldReturnFocusAfterClose={false}\n        shouldCloseOnOverlayClick={true}\n        contentLabel=\"Login/Signup Modal\"\n        >\n        <button className=\"text-center\" onClick={closeModal}><FontAwesomeIcon icon={faTimes} size='2x' /></button>\n        <form>\n          <fieldset className='text-center space-x-4'>\n            <label>\n              <input id='login-radio' checked={checked === 'login-radio'} value='login-radio' onClick={() => setChecked('login-radio')} onChange={handleRadioChange} name='modalRadio' type='radio' /> Log In\n            </label>\n            <label>\n              <input id='signup-radio' checked={checked === 'signup-radio'} value='signup-radio' onClick={() => setChecked('signup-radio')} onChange={handleRadioChange} name='modalRadio' type='radio' /> Sign Up\n            </label>\n          </fieldset>\n        </form>\n        <div>\n          {checked === 'login-radio' ? <LogInForm /> : <SignUpForm />}\n        </div>\n      </Modal>\n    </div>\n  )\n};\n","import React from 'react';\n\nexport default function Splash() {\n  return (\n    <div>\n      Splash\n    </div>\n  )\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_USERS = gql`\n    query users {\n        users {\n            _id\n            username\n        }\n    }\n`\n\nexport const GET_USER = gql`\n    query user($userId: ID!) {\n        user(userId: $userId) {\n            username\n            quizzes {\n                title\n                questions {\n                    questionText\n                    answers {\n                        answerText\n                        isCorrect\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const GET_QUIZZES = gql`\n    query quizzes {\n        quizzes {\n            _id\n            title\n            author\n        }\n    }\n`\n\nexport const GET_QUIZ = gql `\n    query quiz($quizId: ID!) {\n        quiz(quizId: $quizId) {\n            _id\n            title\n            author\n            questions {\n                questionText\n                answers {\n                    answerText\n                    isCorrect\n                }\n            }\n        }\n    }\n`\n\nexport const GET_ME = gql `\n    query me {\n        me {\n            _id\n            username\n            quizzes {\n                _id\n                title\n                questions {\n                    questionText\n                    index\n                    answers {\n                        answerText\n                        index\n                        isCorrect\n                    }\n                }\n            }\n        }\n    }\n`","import {useQuery, useMutation} from \"@apollo/client\"\nimport { DELETE_QUIZ } from \"../../utils/mutations\"\nimport { GET_ME } from \"../../utils/queries\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport default function QuizList() {\n\n    const [deleteQuiz] = useMutation(DELETE_QUIZ)\n\n    const {loading, data} = useQuery(GET_ME)\n\n    let quizData = data?.me.quizzes || {}\n\n    if(loading) {\n        return(\n            <h2 className=\"text-xl font-bold\">Loading</h2>\n        )\n    }\n\n    function handleQuizEdit(quiz) {\n        localStorage.setItem('quiz', JSON.stringify(quiz))\n        window.location.assign(\"/creator\")\n    }\n\n    async function handleQuizDelete(quiz, e) {\n        e.stopPropagation()\n        const { data } = await deleteQuiz({\n            variables: {quizId: quiz._id}\n        })\n        if(data) {\n            window.location.reload()\n        }\n    }\n    \n    return (\n        <div className=\"mx-auto container bg-yellow-200 rounded p-3\">\n            <h2 className=\"text-lg mb-5 font-semibold\">Quiz List</h2>\n            {quizData.length\n            ? (<div>\n                <span>{`You have ${quizData.length} Saved Quizzes`}</span>\n                <div className=\"flex flex-col space-y-3 container\">\n                {quizData.map((quiz) => {\n                    return (\n                        <div onClick={() => handleQuizEdit(quiz)} className=\"flex justify-between container rounded bg-red-500 hover:bg-red-700 hover:shadow-sm transition duration-200 px-2 py-1\">\n                            <span>{quiz.title}</span>\n                            <div className=\"px-1\" onClick={(e) => handleQuizDelete(quiz, e)}>\n                                <span><FontAwesomeIcon icon={faTimes} /></span>\n                            </div>\n                        </div>\n                    )\n                })}\n                </div>\n            </div>)\n            : `You have No Saved Quizzes`}\n        </div>\n    )\n}","import React from 'react'\nimport QuizList from '../../components/QuizList';\n\nexport default function Dashboard() {\n  return (\n    <div>\n      Dashboard\n      <QuizList />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { CREATE_QUIZ } from '../../utils/mutations'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport default function QuizCreator() {\n\n    const [createQuiz] = useMutation(CREATE_QUIZ)\n\n    const baseQuiz = {\n        title: \"\",\n        questions: []\n    }\n\n    const baseQuestion = {\n        questionText: \"\",\n        answers: [],\n        index: 0\n    }\n\n    const baseAnswer = {\n        answerText: \"\",\n        isCorrect: false,\n        index: 0\n    }\n\n    const loadedQuiz = localStorage.getItem('quiz')\n    ? JSON.parse(localStorage.getItem('quiz'))\n    : baseQuiz\n\n    if(loadedQuiz.__typename) {\n        delete loadedQuiz.__typename\n        loadedQuiz.questions.map((question) => {\n            delete question.__typename\n            question.answers.map((answer) => {\n                delete answer.__typename\n                return answer\n            })\n            return question\n        })\n    }\n\n    if(loadedQuiz._id) {\n        delete loadedQuiz._id\n    }\n\n    const [quiz, setQuiz] = useState(loadedQuiz)\n\n    const [currentQuestion, setCurrentQuestion] = useState({})\n\n    const [currentAnswer, setCurrentAnswer] = useState({})\n\n    function addQuestion() {\n        const newQuestionList = quiz.questions\n        const newQuestion = baseQuestion\n        newQuestion.index = quiz.questions.length + 1\n        newQuestionList.push(baseQuestion)\n        setQuiz({ ...quiz, questions: newQuestionList })\n        console.log(quiz)\n    }\n\n    function addAnswer() {\n        const newAnswerList = currentQuestion.answers\n        const newAnswer = baseAnswer\n        newAnswer.index = currentQuestion.answers.length + 1\n        if (newAnswer.index === 1) {\n            newAnswer.isCorrect = true;\n        }\n        newAnswerList.push(newAnswer)\n        setCurrentQuestion({ ...currentQuestion, answers: newAnswerList })\n    }\n\n    function updateQuestion() {\n        const newQuestionList = quiz.questions\n        newQuestionList[currentQuestion.index - 1] = currentQuestion\n        setQuiz({ ...quiz, questions: newQuestionList })\n        localStorage.setItem('quiz', JSON.stringify(quiz))\n    }\n\n    function updateAnswer() {\n        const newAnswerList = currentQuestion.answers\n        newAnswerList[currentAnswer.index - 1] = currentAnswer\n        setCurrentQuestion({ ...currentQuestion, answers: newAnswerList })\n    }\n\n    function handleQuestionChange(question) {\n        updateQuestion()\n        setCurrentQuestion(question)\n        setCurrentAnswer({});\n    }\n\n    function handleAnswerChange(answer) {\n        updateAnswer()\n        setCurrentAnswer(answer)\n    }\n\n    function handleQuestionDelete(question, e) {\n        e.stopPropagation();\n        if (question.index === currentQuestion.index) {\n            setCurrentQuestion({})\n            setCurrentAnswer({})\n        }\n        const newQuestionList = quiz.questions\n        const delIndex = newQuestionList.indexOf(question)\n        newQuestionList.splice(delIndex, 1)\n        newQuestionList.forEach((question, index) => {\n            question.index = (index + 1)\n        })\n        setQuiz({ ...quiz, questions: newQuestionList })\n    }\n\n    function handleAnswerDelete(answer, e) {\n        e.stopPropagation();\n        if (answer.index === currentAnswer.index) {\n            setCurrentAnswer({})\n        }\n        const newAnswerList = currentQuestion.answers\n        const delIndex = newAnswerList.indexOf(answer)\n        newAnswerList.splice(delIndex, 1)\n        newAnswerList.forEach((answer, index) => {\n            answer.index = (index + 1)\n        })\n        if (answer.isCorrect && newAnswerList.length) {\n            newAnswerList[0].isCorrect = true;\n        }\n        setCurrentQuestion({ ...currentQuestion, answers: newAnswerList })\n    }\n\n    function handleCorrectChange(correctAnswer, e) {\n        e.stopPropagation()\n        const newAnswerList = currentQuestion.answers.map((answer) => {\n            if (answer === correctAnswer) {\n                answer.isCorrect = true\n            }\n            else {\n                answer.isCorrect = false\n            }\n            return answer;\n        })\n        console.log(newAnswerList)\n        setCurrentQuestion({ ...currentQuestion, answers: newAnswerList })\n\n    }\n\n    async function handleQuizCreate() {\n        const { data } = await createQuiz({\n            variables: {input: quiz}\n        })\n        if(data) {\n            setCurrentQuestion({})\n            setCurrentAnswer({})\n            setQuiz(baseQuiz)\n            if(localStorage.getItem('quiz')) {\n                localStorage.removeItem('quiz')\n            }\n        window.location.assign(\"/home\")\n        }\n    }\n\n    return (\n        <div className=\"bg-blue-200 rounded shadow-lg p-5 m-3\">\n            <h1 className=\"text-xl font-bold text-center\">Quiz Creator</h1>\n            <form>\n                <input type=\"text\" value={quiz.title} placeholder=\"Title\" onChange={(e) => setQuiz({ ...quiz, title: e.target.value })} />\n            </form>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 mt-2 gap-3\">\n\n                {/* Questions List */}\n\n                <div className=\"bg-red-500 rounded-lg p-3\">\n                    <h2 className=\"text-lg font-bold mb-4\">Question List</h2>\n                    <div className=\"space-y-2 flex flex-col\">\n                        {quiz.questions.length ? quiz.questions.map((question) => {\n                            return (\n                                <div onClick={() => handleQuestionChange(question)} className={`flex flex-row justify-between container ${currentQuestion.index === question.index ? \"bg-yellow-500 shadow-md\" : \"bg-yellow-200 hover:bg-yellow-300\"} rounded p-2 transition duration-200`} key={question.index}>\n                                    <span><strong>Q{question.index}- </strong>{question.questionText}</span>\n                                    <div onClick={(e) => handleQuestionDelete(question, e)} className=\"px-1\">\n                                        <span><FontAwesomeIcon icon={faTimes} /></span>\n                                    </div>\n                                </div>\n                            )\n                        }) : <p>Add questions by clicking the button below</p>}\n                    </div>\n                    <button className=\"mt-4 w-full rounded py-1 font-semibold hover:bg-green-700 bg-green-500 transition duration-200\" onClick={() => addQuestion()}>Add Question</button>\n                </div>\n\n                {/* Question Editor */}\n\n                <div className=\"bg-red-500 rounded-lg p-3\">\n                    <h2 className=\"text-lg font-bold mb-4\">Question Editor</h2>\n                    {currentQuestion.index ? (\n                        <div>\n                            <form>\n                                <textarea className=\"w-full rounded p-1\" type=\"text\" value={currentQuestion.questionText} placeholder=\"Question\" onChange={(e) => setCurrentQuestion({ ...currentQuestion, questionText: e.target.value })} />\n                            </form>\n\n                            {/* Answers List */}\n\n                            <div className=\"rounded container bg-green-200 p-2 mt-3\">\n                                <span className=\"font-semibold text-lg\">Answers</span>\n                                <div className=\"space-y-2\">\n                                    {currentQuestion.answers.map((answer, index) => {\n                                        return (\n                                            <div onClick={() => handleAnswerChange(answer)} className={`flex flex-row justify-between container rounded ${currentAnswer.index === answer.index ? \"bg-blue-500 shadow-md\" : \"bg-blue-300 hover:bg-blue-400 transition duration-200\"} p-2`} key={index}>\n                                                <span><strong>{answer.index}. </strong>{answer.answerText}</span>\n                                                <div className=\"flex\">\n                                                    <div className=\"px-3\">\n                                                        <input checked={answer.isCorrect} onChange={(e) => handleCorrectChange(answer, e)} type=\"checkbox\" />\n                                                    </div>\n                                                    <div onClick={(e) => handleAnswerDelete(answer, e)} className=\"px-1\">\n                                                        <span><FontAwesomeIcon icon={faTimes} /></span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                                <button onClick={() => addAnswer()} className=\"mx-auto bg-green-500 hover:bg-green-700 py-1 font-semibold rounded w-full mt-2 transition duration-200\">Add Answer</button>\n                            </div>\n\n\n\n                            <button className=\"mt-4 w-full rounded bg-blue-600 hover:bg-blue-800 py-1 font-semibold transition duration-200\" onClick={() => updateQuestion()}>Update Question</button>\n                        </div>\n                    ) : (\n                        <p>Select a question to edit</p>\n                    )}\n\n\n\n                </div>\n\n                {/* Answer Editor */}\n\n                <div className=\"bg-red-500 rounded-lg p-3\">\n                    <h2 className=\"text-lg font-bold mb-4\">Answer Editor</h2>\n                    {currentAnswer.index ? (\n                        <div>\n                            <form>\n                                <textarea className=\"w-full rounded p-1\" type=\"text\" value={currentAnswer.answerText} placeholder=\"Answer\" onChange={(e) => setCurrentAnswer({ ...currentAnswer, answerText: e.target.value })} />\n                            </form>\n                            <button className=\"mt-4 w-full rounded bg-blue-600 hover:bg-blue-800 py-1 font-semibold transition duration-200\" onClick={() => updateAnswer()}>Update Answer</button>\n                        </div>\n                    ) : (\n                        <p>Select an answer to edit</p>\n                    )}\n                </div>\n            </div>\n            <div className=\"text-center\">\n                {quiz.questions.length >= 3 ? <button onClick={() => handleQuizCreate()} className=\"rounded bg-green-500 hover:bg-green-700 mx-auto font-bold text-lg mt-10 py-3 px-20 transition duration-200\">Create Quiz</button> : null}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nimport { setContext } from '@apollo/client/link/context';\n\nimport MainNavbar from './components/MainNavbar';\nimport Splash from './pages/Splash';\nimport Dashboard from './pages/Dashboard';\nimport QuizCreator from './pages/QuizCreator'\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    console.log('graphQLErrors', graphQLErrors);\n  }\n  if (networkError) {\n    console.log('networkError', networkError);\n  }\n});\n\nconst link = ApolloLink.from([errorLink, httpLink]);\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(link),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <MainNavbar />\n          <Switch>\n            <Route exact path='/' component={Splash} />\n            <Route exact path='/home' component={Dashboard} />\n            <Route path=\"/creator\" component={QuizCreator} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}