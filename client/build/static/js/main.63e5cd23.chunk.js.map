{"version":3,"sources":["utils/auth.js","utils/mutations.js","components/LogInForm/index.js","components/SignUpForm/index.js","components/Dropdown/index.js","components/MainNavbar/index.js","pages/Splash/index.js","utils/queries.js","components/SearchResults/index.js","components/QuizList/index.js","pages/Dashboard/index.js","components/Alert/index.js","pages/QuizCreator/index.js","pages/Quiz/index.js","App.js","reportWebVitals.js","index.js"],"names":["localStorage","getItem","token","decode","exp","Date","now","removeItem","this","getToken","isTokenExpired","idToken","setItem","window","location","assign","LOGIN_USER","gql","CREATE_USER","CREATE_QUIZ","DELETE_QUIZ","SUBMIT_QUIZ","LogInForm","useState","email","password","userFormData","setUserFormData","useMutation","loginUser","handleFormSubmit","event","a","preventDefault","variables","data","Error","Auth","login","console","error","className","onSubmit","e","value","onChange","target","type","placeholder","SignUpForm","username","createUser","addUser","Dropdown","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","onclick","document","querySelector","ref","onClick","createPopper","current","placement","getProfile","icon","faChevronDown","style","minWidth","to","href","logout","customStyles","content","top","left","right","bottom","marginRight","transform","display","textAlign","MainNavbar","isOpen","setIsOpen","checked","setChecked","closeModal","handleRadioChange","log","as","Link","loggedIn","onRequestClose","shouldReturnFocusAfterClose","shouldCloseOnOverlayClick","contentLabel","faTimes","size","id","name","Splash","Modal","setAppElement","getElementById","GET_QUIZ","GET_ME","SEARCH_QUIZZES","SearchResults","input","useQuery","search","loading","searchData","searchQuizzes","length","map","quiz","_id","title","author","faChevronRight","QuizList","deleteQuiz","redirect","refetch","useEffect","quizData","me","quizzes","stopPropagation","quizId","handleQuizDelete","Dashboard","searchInput","setSearchInput","setValue","useForceUpdate","onKeyPress","keyCode","reload","handleSearchSubmit","Alert","hideFunction","message","faExclamation","QuizCreator","createQuiz","show","alert","setAlert","baseQuiz","questions","baseQuestion","questionText","answers","index","baseAnswer","answerText","isCorrect","loadedQuiz","JSON","parse","__typename","question","answer","setQuiz","currentQuestion","setCurrentQuestion","currentAnswer","setCurrentAnswer","setRedirect","updateQuestion","newQuestionList","stringify","updateAnswer","newAnswerList","handleQuestionChange","delIndex","indexOf","splice","forEach","handleQuestionDelete","push","addQuestion","handleAnswerChange","correctAnswer","handleCorrectChange","handleAnswerDelete","newAnswer","addAnswer","handleQuizCreate","Quiz","setAnswers","percentage","results","grades","setGrades","started","setStarted","submitQuiz","useParams","answerList","chosenAnswer","questionIndex","forceUpdate","getChosenAnswer","chosenIndex","find","valid","Answers","answersList","questionList","newAnswers","checkAnswer","createdAt","scores","score","percent","toFixed","newIndex","prevQuestion","nextQuestion","gradeQuiz","grade","correct","httpLink","createHttpLink","uri","errorLink","onError","graphQLErrors","networkError","link","ApolloLink","from","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63e5cd23.chunk.js","sourcesContent":["import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  };\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getProfile()  {\r\n    return decode(this.getToken());\r\n  };\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  };\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n  };\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.assign('/');\r\n  };\r\n};\r\n\r\nexport default new AuthService();\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n        user {\r\n          _id\r\n          username\r\n        }\r\n        token\r\n  }\r\n}\r\n`\r\n\r\nexport const CREATE_USER = gql`\r\n    mutation createUser($email: String!, $username: String!, $password: String!) {\r\n     addUser(email: $email, username: $username, password: $password) {\r\n         user {\r\n              _id\r\n              username\r\n             }\r\n         token\r\n  }\r\n}\r\n`\r\n\r\nexport const CREATE_QUIZ = gql `\r\n    mutation createQuiz($input: QuizInput!) {\r\n  createQuiz(input: $input) {\r\n    title\r\n    _id\r\n    createdAt\r\n    author\r\n    questions {\r\n      questionText\r\n      answers {\r\n        answerText\r\n        isCorrect\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport const DELETE_QUIZ = gql`\r\n  mutation deleteQuiz($quizId: ID!) {\r\n    deleteQuiz(quizId: $quizId) {\r\n      title\r\n      _id\r\n      author\r\n    }\r\n  }\r\n`\r\n\r\nexport const SUBMIT_QUIZ = gql`\r\n  mutation submitQuiz($quizId: ID!, $answers: [submittedAnswer]) {\r\n    submitQuiz(quizId: $quizId, answers: $answers) {\r\n      percentage\r\n      results {\r\n        questionIndex\r\n        correct\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nexport default function LogInForm() {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n\r\n  const [loginUser] = useMutation(LOGIN_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await loginUser({\r\n        variables: {...userFormData}\r\n      });\r\n      if (!data) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n      Auth.login(data.login.token);\r\n      window.location.assign('/home');\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n  \r\n    setUserFormData({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <form className='p-3' onSubmit={(e) => handleFormSubmit(e)}>\r\n        <input value={userFormData.email} onChange={(e) => setUserFormData({...userFormData, email: e.target.value})} type='email' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='john@website.com' />\r\n        <input value={userFormData.password} onChange={(e) => setUserFormData({...userFormData, password: e.target.value})} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='password' />\r\n        <button \r\n          type='submit' className='w-full px-4 py-3 bg-blue-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform'\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { CREATE_USER } from '../../utils/mutations';\r\n\r\nexport default function SignUpForm() {\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: ''});\r\n  const [createUser] = useMutation(CREATE_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createUser({\r\n        variables: {...userFormData}\r\n      });\r\n\r\n      if (!data) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n      Auth.login(data.addUser.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className='p-3' onSubmit={(e) => handleFormSubmit(e)}>\r\n      <input value={userFormData.username} onChange={(e) => setUserFormData({...userFormData, username: e.target.value})} type='text' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='username' />\r\n        <input value={userFormData.email} onChange={(e) => setUserFormData({...userFormData, email: e.target.value})} type='email' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='john@website.com' />\r\n        <input value={userFormData.password} onChange={(e) => setUserFormData({...userFormData, password: e.target.value})} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='password' />\r\n        {/* <input onChange={handleInputChange} type='password' className='w-full mb-3 placeholder-gray-400 placeholder-opacity-70 px-4 py-3 rounded-full' placeholder='confirm password' /> */}\r\n        <button \r\n          type='submit' className='w-full px-4 py-3 bg-blue-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform'>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState, createRef } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { createPopper } from \"@popperjs/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function Dropdown() {\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = useState(false);\r\n  const btnDropdownRef = createRef();\r\n  const popoverDropdownRef = createRef();\r\n\r\n  const openDropdownPopover = () => {\r\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\"\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n\r\n  window.onclick = function(event) {\r\n    event.preventDefault();\r\n    if (event.target !== document.querySelector('.dropdownbtn')) {\r\n      setDropdownPopoverShow(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-wrap px-4\">\r\n      <div className=\"relative font-main inline-flex align-middle w-full\">\r\n            <button\r\n              className={\r\n                \"text-theme-aliceblue text-sm px-4 py-2 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 dropdownbtn bg-theme-darker\"\r\n              }\r\n              type=\"button\"\r\n              ref={btnDropdownRef}\r\n              onClick={() => {\r\n                dropdownPopoverShow\r\n                  ? closeDropdownPopover()\r\n                  : openDropdownPopover();\r\n              }}\r\n            >\r\n              {Auth.getProfile().data.username} <FontAwesomeIcon icon={faChevronDown} />\r\n            </button>\r\n            <div\r\n              ref={popoverDropdownRef}\r\n              className={\r\n                (dropdownPopoverShow ? \"block \" : \"hidden \") +\r\n                \"bg-theme-darker text-base z-50 py-1 list-none text-center rounded shadow-lg mt-1\"\r\n              }\r\n              style={{ minWidth: \"12rem\" }}\r\n            >\r\n            <Link to=\"/home\">\r\n              <p\r\n                className={\r\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\r\n                }\r\n              >\r\n                Home\r\n              </p>\r\n            </Link>\r\n            <Link to=\"/creator\">\r\n              <p\r\n                className={\r\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\r\n                }\r\n              >\r\n                Creator\r\n              </p>\r\n            </Link>\r\n              <a\r\n                href=\"/home\"\r\n                className={\r\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\r\n                }\r\n                onClick={e => e.preventDefault()}\r\n              >\r\n                Something else here\r\n              </a>\r\n              <div className=\"h-0 my-2 border border-solid border-t-0 border-blueGray-800 opacity-25\" />\r\n              <a\r\n                href=\"/home\"\r\n                className={\r\n                  \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent\"\r\n                }\r\n              >\r\n                <button className='px-4 py-3 bg-red-600 rounded-md text-white outline-none focus:ring-4 shadow-lg transform active:scale-x-75 transition-transform' onClick={Auth.logout}>Logout</button>\r\n              </a>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport LogInForm from '../LogInForm';\r\nimport SignUpForm from '../SignUpForm';\r\nimport Dropdown from '../Dropdown';\r\nimport Auth from '../../utils/auth';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'inline',\r\n    textAlign: 'right'\r\n  }\r\n};\r\n\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nexport default function MainNavbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [checked, setChecked] = useState('login-radio');\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  };\r\n  \r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  function handleRadioChange(event) {\r\n    console.log(event.target);\r\n  }\r\n\r\n  return (\r\n    <nav className='w-full fixed bg-theme-main z-10'>\r\n      <div className='flex items-center justify-between mx-auto w-11/12 py-3'>\r\n        <div>\r\n          <Link to=\"/home\">\r\n            <p className='tracking-widest text-theme-aliceblue font-main font-semibold text-xl' as={Link}>\r\n              Quizzard\r\n            </p>\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <Dropdown/>\r\n            </>\r\n          ) : (\r\n            <>\r\n            <button className='openModal font-main text-center' onClick={openModal}>Log In | Sign Up</button>\r\n            </>\r\n          )}\r\n        </div>\r\n        <Modal \r\n          isOpen={isOpen}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          shouldReturnFocusAfterClose={false}\r\n          shouldCloseOnOverlayClick={true}\r\n          contentLabel=\"Login/Signup Modal\"\r\n          >\r\n          <button className=\"text-center\" onClick={closeModal}><FontAwesomeIcon icon={faTimes} size='2x' /></button>\r\n          <form>\r\n            <fieldset className='text-center space-x-4'>\r\n              <label>\r\n                <input id='login-radio' checked={checked === 'login-radio'} value='login-radio' onClick={() => setChecked('login-radio')} onChange={handleRadioChange} name='modalRadio' type='radio' /> Log In\r\n              </label>\r\n              <label>\r\n                <input id='signup-radio' checked={checked === 'signup-radio'} value='signup-radio' onClick={() => setChecked('signup-radio')} onChange={handleRadioChange} name='modalRadio' type='radio' /> Sign Up\r\n              </label>\r\n            </fieldset>\r\n          </form>\r\n          <div>\r\n            {checked === 'login-radio' ? <LogInForm /> : <SignUpForm />}\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </nav>\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Splash() {\r\n  return (\r\n    <div className='min-h-screen flex justify-center items-center bg-theme-lighter'>\r\n      <div className='mx-auto my-20 w-4/5 md:w-2/3'>\r\n        <div className='container divide-y divide-theme-darker bg-theme-bluegray space-y-2 text-center text-theme-aliceblue p-6 rounded-md border-2 border-theme-main md:border-4'>\r\n          <h2 className='text-2xl font-semibold'>\r\n            Welcome to Quizzard!\r\n          </h2>\r\n          <p className='text-sm md:text-base'>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec efficitur ante eget magna dignissim egestas. Duis accumsan placerat nibh, id vehicula tellus finibus quis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Pellentesque aliquam, augue eget efficitur dignissim, risus quam lobortis diam, tincidunt bibendum lectus libero in sem. Nulla maximus placerat ipsum, vitae consequat ligula euismod nec. Donec finibus eros ut purus porttitor blandit. Nam faucibus eget leo quis sollicitudin.\r\n          </p>\r\n          <p className='text-sm md:text-base'>\r\n            Nullam condimentum imperdiet cursus. Praesent at sem et ex accumsan aliquet in at ex. Suspendisse luctus et libero at molestie. Phasellus dictum, sem et dictum vehicula, dui dolor vestibulum mauris, id condimentum eros sem at ex. Nullam ut tristique lacus. Etiam a dui placerat, volutpat arcu ac, ultrices ante. Curabitur quam ante, tempor in orci vel, iaculis varius ex. Nam imperdiet varius elit, non fermentum nulla ultricies id. Vestibulum vel risus sit amet magna tincidunt bibendum ut vel dui. Donec lacus lacus, elementum quis ex consequat, luctus laoreet justo. Nullam quis erat sit amet elit varius ultrices at eget leo. Pellentesque id lobortis tellus, vel congue turpis. Integer tristique urna quis risus vehicula, commodo gravida erat vehicula.\r\n          </p>\r\n          <p className='text-sm md:text-base'>\r\n            Duis pretium tempus lacus, eget malesuada augue porttitor vitae. Integer a orci lacus. In at lacinia odio, quis vestibulum ex. Nulla in ex ac est elementum consequat sit amet a sem. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Suspendisse molestie velit lacus, eu varius nibh pharetra et. Pellentesque tincidunt sit amet elit venenatis hendrerit. Sed porta eget tellus sit amet tempor. Vestibulum et felis in tortor scelerisque ornare. Sed rhoncus, metus sit amet blandit commodo, orci lacus porta lorem, non eleifend ex diam eget est. Integer in malesuada elit. Donec lectus augue, condimentum faucibus scelerisque malesuada, luctus eu ipsum. Maecenas facilisis condimentum cursus. Pellentesque luctus tincidunt auctor. Praesent mollis leo vel arcu tempus aliquet.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_USERS = gql`\r\n    query users {\r\n        users {\r\n            _id\r\n            username\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_USER = gql`\r\n    query user($userId: ID!) {\r\n        user(userId: $userId) {\r\n            username\r\n            quizzes {\r\n                title\r\n                questions {\r\n                    questionText\r\n                    answers {\r\n                        answerText\r\n                        isCorrect\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_QUIZZES = gql`\r\n    query quizzes {\r\n        quizzes {\r\n            _id\r\n            title\r\n            author\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_QUIZ = gql`\r\n    query quiz($quizId: ID!) {\r\n        quiz(quizId: $quizId) {\r\n            _id\r\n            title\r\n            author\r\n            createdAt\r\n            questions {\r\n                questionText\r\n                index\r\n                answers {\r\n                    answerText\r\n                    index\r\n                    isCorrect\r\n                }\r\n            }\r\n            scores {\r\n                username\r\n                percent\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_ME = gql`\r\n  query me {\r\n    me {\r\n      _id\r\n      username\r\n      quizzes {\r\n        _id\r\n        title\r\n        questions {\r\n          questionText\r\n          index\r\n          answers {\r\n            answerText\r\n            index\r\n            isCorrect\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEARCH_QUIZZES = gql`\r\n  query search($search: String!) {\r\n    searchQuizzes(search: $search) {\r\n      _id\r\n      title\r\n      author\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { SEARCH_QUIZZES } from '../../utils/queries';\r\n\r\nexport default function SearchResults({ input }) {\r\n  const { loading, data, error } = useQuery(SEARCH_QUIZZES, {\r\n    variables: { search: input }\r\n  });\r\n\r\n  let searchData = data?.searchQuizzes || [];\r\n\r\n  if (loading) {\r\n    return(\r\n      <div className=\"h-auto overflow-y-auto p-5 bg-theme-bluegray text-lg font-semibold text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main\">\r\n        <h2 className=\"text-xl font-bold\">Loading</h2>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='h-2/3 md:h-ninety p-5 overflow-y-auto bg-theme-bluegray text-lg font-semibold text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main'>\r\n      {searchData.length \r\n      ? (\r\n        <div>\r\n          <span className='italic'>{`Search Results for '${input}'`}</span>\r\n          <div className='flex flex-col space-y-3 container'>\r\n            {searchData.map((quiz) => {\r\n              return(\r\n                <Link to={`/quiz/${quiz._id}`}>\r\n                <div className=\"flex justify-between container rounded bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 px-2 py-1\">\r\n                  <span>{quiz.title}</span>\r\n                  <span>{quiz.author}</span>\r\n                  <div>\r\n                    <span><FontAwesomeIcon icon={faChevronRight} /></span>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      )\r\n    : `No results for that search!`}\r\n    </div>\r\n  )\r\n}\r\n","import { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useState, useEffect } from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { DELETE_QUIZ } from \"../../utils/mutations\";\r\nimport { GET_ME } from \"../../utils/queries\";\r\n\r\nexport default function QuizList() {\r\n  const [deleteQuiz] = useMutation(DELETE_QUIZ);\r\n\r\n  const [redirect, setRedirect] = useState(\"\");\r\n\r\n  const { loading, data, refetch } = useQuery(GET_ME);\r\n\r\n  useEffect(() => {\r\n    refetch();\r\n  }, [data]);\r\n\r\n  let quizData = data?.me?.quizzes || {};\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"h-auto overflow-y-auto md:h-1/2 p-5 bg-theme-bluegray text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main\">\r\n        <h2 className=\"text-xl font-bold\">Loading</h2>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function handleQuizEdit(quiz) {\r\n    localStorage.setItem('quiz', JSON.stringify(quiz));\r\n    setRedirect(true);\r\n  };\r\n\r\n\r\n  async function handleQuizDelete(quiz, e) {\r\n    e.stopPropagation();\r\n    const { data } = await deleteQuiz({\r\n      variables: { quizId: quiz._id }\r\n    });\r\n    if (data) {\r\n      refetch()\r\n    };\r\n  };\r\n\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/creator\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-auto overflow-y-auto md:h-1/2 p-5 bg-theme-bluegray text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main\">\r\n      <h2 className=\"text-lg mb-5 font-semibold\">Your Quizzes</h2>\r\n      {quizData.length\r\n        ? (<div>\r\n          <span>{`You have ${quizData.length} Saved Quizzes`}</span>\r\n          <div className=\"mt-5 flex flex-col space-y-3 container\">\r\n            {quizData.map((quiz) => {\r\n              return (\r\n                <Link to={`/quiz/${quiz._id}`}>\r\n                <div className=\"flex justify-between container rounded bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 px-2 py-1\">\r\n                  <span>{quiz.title}</span>\r\n                  <div className=\"px-1\" onClick={(e) => handleQuizDelete(quiz, e)}>\r\n                    <span><FontAwesomeIcon icon={faTimes} /></span>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>)\r\n        : `You have no Saved Quizzes`}\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport SearchResults from '../../components/SearchResults';\r\nimport Auth from '../../utils/auth';\r\nimport QuizList from '../../components/QuizList';\r\n\r\nexport default function Dashboard() {\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  function useForceUpdate() {\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n  }\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  \r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n  }\r\n  \r\n  const handleKeyPress = (event) => {\r\n    if (event.keyCode === 13) {\r\n      window.location.reload(false);\r\n      handleSearchSubmit();\r\n    }\r\n  };\r\n\r\n  let token = localStorage.getItem('id_token');\r\n  \r\n  if (!token) {\r\n    return <Redirect to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='min-h-screen flex justify-center items-center bg-theme-lighter'>\r\n      <div className='h-auto md:h-eightyvh m-2 md:m-5 grid grid-cols-1 md:grid-cols-3 gap-2 md:gap-4'>\r\n        <div className='text-center h-full space-y-4 mt-20 md:mt-0 mb-14'>\r\n          <form className='h-10 md:h-ten'>\r\n            <input \r\n              value={searchInput}\r\n              onChange={(e) => {\r\n                setSearchInput(e.target.value);\r\n              }}\r\n              onKeyPress={handleKeyPress}\r\n              type='text'\r\n              className='w-full bg-theme-aliceblue placeholder-gray-400 placeholder-opacity-70 p-3 rounded'\r\n              placeholder='Search for topics!'\r\n            />\r\n          </form>\r\n          {!(searchInput === \"\") ? <SearchResults input={searchInput} /> : (\r\n            <div className='h-2/3 md:h-ninety p-5 bg-theme-bluegray text-lg font-semibold text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main'>\r\n              Top Quizzes\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='flex flex-wrap space-y-0 md:space-y-4 text-center'>\r\n          <div className='h-ten w-full mt-12 md:mt-0 grid grid-flow-col grid-cols-2 gap-3'>\r\n            <Link to='/creator'>\r\n              <button className='w-full p-1 md:p-3 bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 rounded-md text-white outline-none focus:ring-4 shadow-lg'>\r\n                <p>\r\n                  Create a quiz\r\n                </p>\r\n              </button>\r\n            </Link>\r\n            <Link to='/' onClick={Auth.logout}>\r\n              <button className='w-full p-1 md:p-3 bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 rounded-md text-white outline-none focus:ring-4 shadow-lg'>\r\n                <p>\r\n                  Log out\r\n                </p>\r\n              </button>\r\n            </Link>\r\n            <Link to='/'>\r\n              <button className='w-full p-1 md:p-3 bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 rounded-md text-white outline-none focus:ring-4 shadow-lg'>\r\n                  <p>\r\n                    Third button\r\n                  </p>\r\n              </button>\r\n            </Link>\r\n            <Link to='/'>\r\n              <button className='w-full p-1 md:p-3 bg-theme-darkerer hover:bg-theme-darkest hover:shadow-sm transition duration-200 rounded-md text-white outline-none focus:ring-4 shadow-lg'>\r\n                <p>\r\n                  Fourth button\r\n                </p>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <div className='hidden md:grid h-ninety p-5 flex-grow bg-theme-bluegray text-lg font-semibold text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main'>\r\n            Top Categories\r\n          </div>\r\n        </div>\r\n        <div className='text-center space-y-4'>\r\n          <QuizList />\r\n          <div className='hidden md:grid h-1/2 p-5 bg-theme-bluegray text-lg font-semibold text-theme-aliceblue border-2 md:border-4 rounded-md border-theme-main'>\r\n            Top Users\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Alert({hideFunction, message}) {\r\n    return (\r\n        <div>\r\n            <div className=\"text-white flex px-6 py-4 border-0 rounded relative mb-4 bg-red-700\">\r\n                <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                    <FontAwesomeIcon icon={faExclamation} />\r\n                </span>\r\n                <span className=\"inline-block align-middle mr-8\">\r\n                    <b className=\"capitalize\">Failed: </b> {message}\r\n                </span>\r\n                <button onClick={hideFunction} className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\">\r\n                    <span>×</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_QUIZ } from '../../utils/mutations';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Alert from '../../components/Alert';\r\n\r\nexport default function QuizCreator() {\r\n  const [createQuiz, {error}] = useMutation(CREATE_QUIZ);\r\n\r\n  const [alert, setAlert] = useState({show: false, message:\"\"})\r\n\r\n  const baseQuiz = {\r\n    title: \"\",\r\n    questions: []\r\n  };\r\n\r\n  const baseQuestion = {\r\n    questionText: \"\",\r\n    answers: [],\r\n    index: 0\r\n  };\r\n\r\n  const baseAnswer = {\r\n    answerText: \"\",\r\n    isCorrect: false,\r\n    index: 0\r\n  };\r\n\r\n  const loadedQuiz = localStorage.getItem('quiz')\r\n    ? JSON.parse(localStorage.getItem('quiz'))\r\n    : baseQuiz;\r\n\r\n  if (loadedQuiz.__typename) {\r\n    delete loadedQuiz.__typename;\r\n    loadedQuiz.questions.map((question) => {\r\n      delete question.__typename;\r\n      question.answers.map((answer) => {\r\n        delete answer.__typename;\r\n        return answer;\r\n      });\r\n      return question;\r\n    });\r\n  };\r\n\r\n  if (loadedQuiz._id) {\r\n    delete loadedQuiz._id;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(error) {\r\n      console.log(error.message)\r\n      setAlert({show: true, message: error.message})\r\n    }\r\n  }, [error])\r\n\r\n  const [quiz, setQuiz] = useState(loadedQuiz);\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n  const [currentAnswer, setCurrentAnswer] = useState({});\r\n\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  function addQuestion() {\r\n    const newQuestionList = quiz.questions;\r\n    const newQuestion = baseQuestion;\r\n    newQuestion.index = quiz.questions.length + 1;\r\n    newQuestionList.push(baseQuestion);\r\n    setQuiz({ ...quiz, questions: newQuestionList });\r\n    console.log(quiz);\r\n  };\r\n\r\n  function addAnswer() {\r\n    const newAnswerList = currentQuestion.answers;\r\n    const newAnswer = baseAnswer;\r\n    newAnswer.index = currentQuestion.answers.length + 1;\r\n    if (newAnswer.index === 1) {\r\n      newAnswer.isCorrect = true;\r\n    };\r\n    newAnswerList.push(newAnswer);\r\n    setCurrentQuestion({ ...currentQuestion, answers: newAnswerList });\r\n  };\r\n\r\n  function updateQuestion() {\r\n    const newQuestionList = quiz.questions;\r\n    newQuestionList[currentQuestion.index - 1] = currentQuestion;\r\n    setQuiz({ ...quiz, questions: newQuestionList });\r\n    localStorage.setItem('quiz', JSON.stringify(quiz));\r\n  };\r\n\r\n  function updateAnswer() {\r\n    const newAnswerList = currentQuestion.answers;\r\n    newAnswerList[currentAnswer.index - 1] = currentAnswer;\r\n    setCurrentQuestion({ ...currentQuestion, answers: newAnswerList });\r\n  };\r\n\r\n  function handleQuestionChange(question) {\r\n    updateQuestion();\r\n    setCurrentQuestion(question);\r\n    setCurrentAnswer({});\r\n  };\r\n\r\n  function handleAnswerChange(answer) {\r\n    updateAnswer();\r\n    setCurrentAnswer(answer);\r\n  };\r\n\r\n  function handleQuestionDelete(question, e) {\r\n    e.stopPropagation();\r\n    if (question.index === currentQuestion.index) {\r\n      setCurrentQuestion({});\r\n      setCurrentAnswer({});\r\n    };\r\n\r\n    const newQuestionList = quiz.questions;\r\n    const delIndex = newQuestionList.indexOf(question);\r\n    newQuestionList.splice(delIndex, 1);\r\n    newQuestionList.forEach((question, index) => {\r\n      question.index = (index + 1);\r\n    });\r\n    setQuiz({ ...quiz, questions: newQuestionList });\r\n  };\r\n\r\n  function handleAnswerDelete(answer, e) {\r\n    e.stopPropagation();\r\n    if (answer.index === currentAnswer.index) {\r\n      setCurrentAnswer({});\r\n    };\r\n    const newAnswerList = currentQuestion.answers;\r\n    const delIndex = newAnswerList.indexOf(answer);\r\n    newAnswerList.splice(delIndex, 1);\r\n    newAnswerList.forEach((answer, index) => {\r\n      answer.index = (index + 1);\r\n    })\r\n    if (answer.isCorrect && newAnswerList.length) {\r\n      newAnswerList[0].isCorrect = true;\r\n    }\r\n    setCurrentQuestion({ ...currentQuestion, answers: newAnswerList });\r\n  }\r\n\r\n  function handleCorrectChange(correctAnswer, e) {\r\n    e.stopPropagation();\r\n    const newAnswerList = currentQuestion.answers.map((answer) => {\r\n      if (answer === correctAnswer) {\r\n        answer.isCorrect = true;\r\n      }\r\n      else {\r\n        answer.isCorrect = false;\r\n      }\r\n      return answer;\r\n    })\r\n    console.log(newAnswerList);\r\n    setCurrentQuestion({ ...currentQuestion, answers: newAnswerList });\r\n\r\n  }\r\n\r\n  async function handleQuizCreate() {\r\n    const { data } = await createQuiz({\r\n      variables: { input: quiz }\r\n    })\r\n    if (data) {\r\n      setCurrentQuestion({});\r\n      setCurrentAnswer({});\r\n      setQuiz(baseQuiz);\r\n      if (localStorage.getItem('quiz')) {\r\n        localStorage.removeItem('quiz');\r\n      }\r\n      setRedirect(true);\r\n    }\r\n  }\r\n\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  if (!token) {\r\n    return <Redirect to='/' />;\r\n  };\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/home/reload\" />;\r\n  };\r\n\r\n  return (\r\n    <div className='min-h-screen flex bg-theme-lighter'>\r\n      <div className=\"bg-theme-bluegray border-2 md:border-4 border-theme-main mt-20 w-full rounded shadow-lg p-5 m-5\">\r\n        <div className='mb-3 md:flex md:justify-between'>\r\n          <h1 className=\"text-2xl font-bold text-center md:text-right mb-3\">Quiz Creator</h1>\r\n          <form>\r\n            <input className=\"bg-theme-aliceblue w-full md:w-96 rounded-lg\" type=\"text\" value={quiz.title} placeholder=\"Enter a title...\" onChange={(e) => setQuiz({ ...quiz, title: e.target.value })} />\r\n          </form>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 mt-2 gap-3 text-theme-aliceblue\">\r\n\r\n          {/* Questions List */}\r\n\r\n          <div className=\"bg-theme-darker rounded-lg p-3\">\r\n            <h2 className=\"text-lg font-bold mb-4 text-center\">Question List</h2>\r\n            <div className=\"space-y-2 flex flex-col\">\r\n              {quiz.questions.length ? quiz.questions.map((question) => {\r\n                return (\r\n                  <div onClick={() => handleQuestionChange(question)} className={`flex flex-row justify-between container ${currentQuestion.index === question.index ? \"bg-theme-magenta shadow-md\" : \"bg-theme-lightmagenta hover:bg-theme-darkmagenta\"} rounded p-2 transition duration-200`} key={question.index}>\r\n                    <span><strong>{question.index}. ) </strong>{question.questionText}</span>\r\n                    <div onClick={(e) => handleQuestionDelete(question, e)} className=\"px-1\">\r\n                      <span><FontAwesomeIcon icon={faTimes} /></span>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }) : <p>Add questions by clicking the button below</p>}\r\n            </div>\r\n            <button className=\"mt-4 w-full rounded py-1 font-semibold hover:bg-theme-darkroyal bg-theme-royalpurple transition duration-200\" onClick={() => addQuestion()}>Add Question</button>\r\n          </div>\r\n\r\n          {/* Question Editor */}\r\n\r\n          <div className=\"bg-theme-darkerer rounded-lg p-3\">\r\n            <h2 className=\"text-lg font-bold mb-4 text-center\">Question Editor</h2>\r\n            {currentQuestion.index ? (\r\n              <div>\r\n                <form>\r\n                  <textarea className=\"text-black w-full rounded p-1\" type=\"text\" value={currentQuestion.questionText} placeholder=\"Make sure the correct answer is selected...\" onChange={(e) => setCurrentQuestion({ ...currentQuestion, questionText: e.target.value })} />\r\n                </form>\r\n\r\n                {/* Answers List */}\r\n\r\n                <div className=\"rounded container border-2 border-theme-aliceblue bg-theme-smoke p-2 mt-3\">\r\n                  <span className=\"font-semibold text-lg\">Answers</span>\r\n                  <div className=\"space-y-2\">\r\n                    {currentQuestion.answers.map((answer, index) => {\r\n                      return (\r\n                        <div onClick={() => handleAnswerChange(answer)} className={`flex flex-row justify-between container rounded ${currentAnswer.index === answer.index ? \"bg-theme-magenta shadow-md\" : \"bg-theme-lightmagenta hover:bg-theme-darkmagenta transition duration-200\"} p-2`} key={index}>\r\n                          <span><strong>{answer.index}. </strong>{answer.answerText}</span>\r\n                          <div className=\"flex\">\r\n                            <div className=\"px-3\">\r\n                              <input checked={answer.isCorrect} onChange={(e) => handleCorrectChange(answer, e)} type=\"checkbox\" />\r\n                            </div>\r\n                            <div onClick={(e) => handleAnswerDelete(answer, e)} className=\"px-1\">\r\n                              <span><FontAwesomeIcon icon={faTimes} /></span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                  <button onClick={() => addAnswer()} className=\"mx-auto bg-theme-grass hover:bg-theme-forest py-1 font-semibold rounded w-full mt-2 transition duration-200\">Add Answer</button>\r\n                </div>\r\n                <button className=\"mt-4 w-full rounded hover:bg-theme-darkroyal bg-theme-royalpurple py-1 font-semibold transition duration-200\" onClick={() => updateQuestion()}>Update Question</button>\r\n              </div>\r\n            ) : (\r\n              <p>Select a question to edit</p>\r\n            )}\r\n\r\n\r\n\r\n          </div>\r\n\r\n          {/* Answer Editor */}\r\n\r\n          <div className=\"bg-theme-darkest rounded-lg p-3\">\r\n            <h2 className=\"text-lg font-bold mb-4 text-center\">Answer Editor</h2>\r\n            {currentAnswer.index ? (\r\n              <div>\r\n                <form>\r\n                  <textarea className=\"text-black w-full rounded p-1\" type=\"text\" value={currentAnswer.answerText} placeholder=\"Answer\" onChange={(e) => setCurrentAnswer({ ...currentAnswer, answerText: e.target.value })} />\r\n                </form>\r\n                <button className=\"mt-4 w-full rounded hover:bg-theme-darkroyal bg-theme-royalpurple py-1 font-semibold transition duration-200\" onClick={() => updateAnswer()}>Update Answer</button>\r\n              </div>\r\n            ) : (\r\n              <p>Select an answer to edit</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          {quiz.questions.length >= 3 ? <button onClick={() => handleQuizCreate()} className=\"rounded bg-green-500 hover:bg-green-700 mx-auto font-bold text-lg mt-10 py-3 px-20 transition duration-200\">Create Quiz</button> : null}\r\n        </div>\r\n        {alert.show ?\r\n        <div>\r\n          <Alert message={alert.message} hideFunction={() => setAlert({show: false, message:\"\"})} />\r\n        </div>\r\n        : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { GET_QUIZ } from \"../../utils/queries\";\r\nimport { SUBMIT_QUIZ } from \"../../utils/mutations\";\r\n\r\nimport Alert from \"../../components/Alert\"\r\n\r\nexport default function Quiz() {\r\n\r\n  const [currentQuestion, setCurrentQuestion] = useState({});\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const [grades, setGrades] = useState({percentage: 0, results: []})\r\n\r\n  const [alert, setAlert] = useState({show: false, message:\"\"})\r\n\r\n  const [started, setStarted] = useState(false)\r\n\r\n  const [submitQuiz] = useMutation(SUBMIT_QUIZ)\r\n\r\n  const { id } = useParams();\r\n\r\n  const { loading, data, error } = useQuery(GET_QUIZ, {\r\n    variables: { quizId: id }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCurrentQuestion(data ? data.quiz.questions[0] : {});\r\n    if (!answers.length && data) {\r\n      const answerList = data.quiz.questions.map(question => {\r\n        return ({ chosenAnswer: 0, questionIndex: question.index });\r\n      })\r\n      setAnswers(answerList);\r\n    }\r\n  }, [data]);\r\n\r\n  function nextQuestion() {\r\n    if (currentQuestion.index < data.quiz.questions.length) {\r\n      const nextQuestion = data.quiz.questions[currentQuestion.index];\r\n      setCurrentQuestion(nextQuestion);\r\n    };\r\n  };\r\n\r\n  function prevQuestion() {\r\n    if (currentQuestion.index > 1) {\r\n      const newIndex = (currentQuestion.index - 1);\r\n      const prevQuestion = data.quiz.questions[newIndex - 1];\r\n      setCurrentQuestion(prevQuestion);\r\n    }\r\n  }\r\n\r\n  function useForceUpdate() {\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n  }\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  function checkAnswer(question, answer) {\r\n      let newAnswers = answers;\r\n      newAnswers[question.index - 1].chosenAnswer = answer.index;\r\n      setAnswers(newAnswers);\r\n      forceUpdate();\r\n  };\r\n\r\n  function getChosenAnswer(questionIndex) {\r\n      const chosenIndex = answers.find(answer => answer.questionIndex === questionIndex).chosenAnswer\r\n      return data.quiz.questions[questionIndex - 1].answers[chosenIndex - 1]?.answerText\r\n  }\r\n\r\n  async function gradeQuiz() {\r\n      let valid = true\r\n      answers.forEach(answer => {\r\n          if(answer.chosenAnswer === 0) {\r\n              valid = false\r\n          }\r\n      })\r\n      if(valid) {\r\n          const { data } = await submitQuiz({\r\n              variables: {quizId: id, answers: answers}\r\n          })\r\n          setGrades(data.submitQuiz)\r\n      }\r\n      else {\r\n          setAlert({show: true, message: \"You have unanswered questions!\"})\r\n      }\r\n  }\r\n\r\n  function Answers({ question, answersList }) {\r\n    if (question.answers) {\r\n      const questionList = question.answers.map((answer) => {\r\n        return (\r\n          <div className=\"w-full flex justify-center\" key={`${question.index}${answer.index}`}>\r\n            <div onClick={() => checkAnswer(question, answer)} className={`w-3/4 p-2 rounded transition duration-200 ${answersList[question.index - 1]?.chosenAnswer === answer.index ? \"bg-blue-800\" : \"bg-blue-400 hover:bg-blue-600\"}`}>\r\n              <span>{answer.answerText}</span>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <div className=\"space-y-3\">\r\n          {questionList}\r\n        </div>\r\n      );\r\n    };\r\n    return (\r\n      <p>No Answers</p>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n        <div className='min-h-screen items-center justify-center flex bg-theme-lighter'>\r\n        <span className=\"text-3xl\">Loading...</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className='min-h-screen items-center justify-center flex bg-theme-lighter'>\r\n        <div className=\"p-10 rounded bg-red-400\">\r\n          <span className=\"text-3xl font-bold\">Quiz ID not Found</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='items-center justify-center flex bg-theme-lighter'>\r\n      <div className=\"rounded mt-36 w-full shadow-lg p-5 bg-theme-bluegray mx-1 md:mx-0 md:w-10/12\">\r\n        <h3 className=\"text-3xl text-white font-main\">{data.quiz.title}</h3>\r\n        <span>Created By: {data.quiz.author} on {data.quiz.createdAt}</span>\r\n        <div className=\"w-full p-3 container rounded bg-theme-lighter\">\r\n        {!started && data ?\r\n        <div>\r\n        <div className=\"grid grid-cols-2 px-5 space-x-5\">\r\n        <div className=\"w-full my-10 mx-auto p-3 bg-theme-royalpurple rounded\">\r\n            <h2 className=\"text-lg text-white font-semibold underline\">Description</h2>\r\n        </div>\r\n            <div className=\"w-full my-10 mx-auto p-3 bg-theme-royalpurple rounded\">\r\n                <h2 className=\"text-lg text-white font-semibold underline\">Recent Scores</h2>\r\n                {data.quiz.scores.map(score => {\r\n                    return (\r\n                        <div className=\"flex justify-between w-1/2 mx-auto\">\r\n                            <span>{score.username}</span>\r\n                            <span>{(score.percent * 100).toFixed()}%</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n            <div className=\"text-center\">\r\n                <button className=\"py-2 px-8 bg-theme-lightmagenta hover:bg-theme-magenta transition duration-200 rounded center\" onClick={() => setStarted(true)}>Start Quiz</button>\r\n            </div>\r\n        </div>\r\n        : null\r\n        }\r\n        {!grades.percentage && started\r\n        ? \r\n        <div>\r\n          <span>{currentQuestion.questionText}</span>\r\n          <Answers question={currentQuestion} answersList={answers} />\r\n          <div className=\"mt-10 items-center justify-center flex space-x-5\">\r\n          {currentQuestion.index !== 1 ?\r\n            <button className=\"p-2 rounded bg-theme-darker\" onClick={() => prevQuestion()}>Back</button>\r\n            : null\r\n          }\r\n          {currentQuestion.index !== data.quiz.questions.length ?\r\n            <button className=\"p-2 rounded bg-theme-darker\" onClick={() => nextQuestion()}>Next Question</button>\r\n          : <button onClick={() => gradeQuiz()} className=\"p-2 rounded bg-green-600\">Submit Quiz</button>\r\n          }\r\n          </div>\r\n          <div className=\"w-full text-right\">\r\n            <span className=\"pt-5 pr-2\">{currentQuestion.index}/{data.quiz.questions.length}</span>\r\n          </div>\r\n        </div>\r\n        : null}\r\n        {grades.percentage ? \r\n        <div className=\"space-y-2\">\r\n            <span>You scored {(grades.percentage*100).toFixed()}%</span>\r\n            {grades.results.map(grade => {\r\n                return (\r\n                    <div className={`p-2 flex justify-between rounded ${grade.correct ? \"bg-green-400\" : \"bg-red-600\"}`}>\r\n                        <span>{data.quiz.questions[grade.questionIndex - 1].questionText}</span>\r\n                        <span>Your Answer: {getChosenAnswer(grade.questionIndex)}</span>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n        : null\r\n        }\r\n        {alert.show ?\r\n        <div className=\"mt-5\">\r\n            <Alert message={alert.message} hideFunction={() => setAlert({show: false, message: \"\"})} />\r\n        </div>\r\n        : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {Redirect} from \"react-router\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { onError } from 'apollo-link-error';\r\nimport { ApolloLink } from 'apollo-link';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport MainNavbar from './components/MainNavbar';\r\nimport Splash from './pages/Splash';\r\nimport Dashboard from './pages/Dashboard';\r\nimport QuizCreator from './pages/QuizCreator'\r\nimport Quiz from './pages/Quiz';\r\n\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    console.log('graphQLErrors', graphQLErrors);\r\n  }\r\n  if (networkError) {\r\n    console.log('networkError', networkError);\r\n  }\r\n});\r\n\r\nconst link = ApolloLink.from([errorLink, httpLink]);\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(link),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <>\r\n          <MainNavbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Splash} />\r\n            <Route exact path='/home' component={Dashboard} />\r\n            <Redirect exact from=\"/home/reload\" to=\"/home\" />\r\n            <Route path=\"/creator\" component={QuizCreator} />\r\n            <Route path=\"/quiz/:id\" component={Quiz}/>\r\n          </Switch>\r\n        </>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}